{"version":3,"sources":["assets/images/creditRisk.jpg","assets/images/operationalRisk.jpg","assets/images/creditRiskExtensions.jpg","assets/pdf/CreditRiskExtensions.pdf","assets/pdf/LiquidityRisk.pdf","assets/images/model.jpg","assets/images/sql.jpg","assets/images/crypto.jpg","assets/images/code.jpg","assets/images/passion.jpg","assets/images/SingaporeSkyline-small.jpg","assets/images/backgroundsmall.jpg","assets/pdf/MarketRiskDocumentation.pdf","assets/images/avatar.png","components/StandardGridElement.js","pages/Research.js","pages/About.js","constants/routes.js","pages/Perspectives.js","pages/Home.js","utils/service.js","components/LoadingButton.js","utils/form.js","components/generatedComponents/Credit_Risk_Demo.js","components/generatedComponents/Ops_Risk_Demo.js","components/generatedComponents/Market_Risk_Demo.js","components/Flip.js","components/LambdaForm.js","constants/charts.js","components/DensityChart.js","components/HistogramChart.js","pages/Projects.js","components/DanielNav.js","App.js","index.js","assets/pdf/CreditRiskPaper.pdf","assets/pdf/OpsRiskPaper.pdf","assets/images/liquidity.jpg"],"names":["module","exports","style","marginTop","marginBottom","StandardGridElement","children","rest","Col","sm","md","Research","Container","Row","Card","CardImg","top","width","src","creditRisk","alt","CardBody","CardTitle","className","CardText","href","CreditRiskPaper","target","rel","operationalRisk","OpsRiskPaper","creditRiskExtensions","CreditRiskExtensions","liquidity","LiquidityRisk","About","model","to","sql","crypto","code","passion","Thoughts","Home","singapore","background","getData","body","url","fetch","method","JSON","stringify","then","res","json","LoadingButton","isLoading","color","Progress","animated","value","Button","onChangeHOF","fields","setFields","key","getValueAndOnChangeHOF","onChange","formOffset","size","offset","defaultFieldsDensity","lambda","q","numU","pd","numLoans","volatility","objSelect","onSubmit","useState","getValueAndOnChange","Form","numFields","FormGroup","row","Label","for","Input","type","step","name","id","endpoints","isVisible","selectedEndpoint","setEndpoint","e","React","createElement","t","numOde","a","sigma","correlation","alpha","mu","c","defaultFieldsBond","r0","b","maturity","defaultFieldsEdf","tenor","defaultFieldsBondcall","underlyingMaturity","strike","defaultFieldsBondput","defaultFieldsCaplet","defaultFieldsSwap","swapRate","defaultFieldsSwaption","swapTenor","defaultFieldsAmericanswaption","Flip","open","onClose","close","onClick","LambdaForm","chartComponent","chart","setChart","showChart","setShowChart","setIsLoading","fetchData","preventDefault","numericFields","Object","entries","reduce","prev","curr","parseFloat","catch","err","console","log","onSubmitHOF","chartCInst","data","CONTAINER_STYLE","touchAction","DEFAULT_ANIMATE_STYLE","duration","onLoad","X_AXIS_STYLE","tickLabels","angle","padding","verticalAnchor","textAnchor","chartPadding","bottom","DensityChart","animateStyle","animate","containerComponent","stroke","interpolation","x","y","transformData","map","bin","frequency","tickFormat","split","left","right","HistogramChart","barRatio","fill","Projects","getComputedStyle","document","theme","primary","getPropertyValue","secondary","MarketRiskPaper","imgStyle","paddingRight","borderRadius","DanielNav","isOpen","toggleOpen","Navbar","light","expand","NavbarBrand","tag","Link","avatar","height","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","RRNavLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","ReactGA","initialize","LogPageView","set","page","window","location","pathname","pageview","path","component","Perspectives","from","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.8b762493.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/creditRisk.9a1e0e79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/operationalRisk.5dd4e1a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/creditRiskExtensions.bf30da3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CreditRiskExtensions.4c84a74f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/LiquidityRisk.28f1acca.pdf\";","module.exports = __webpack_public_path__ + \"static/media/model.a0d04c9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sql.f3f28deb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crypto.81ee2e9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code.7c404e5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/passion.b534660b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SingaporeSkyline-small.ee03d0f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundsmall.d4df4573.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MarketRiskDocumentation.8fb22f7f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/avatar.0b3e48d4.png\";","import React from 'react'\nimport { Col } from 'reactstrap'\nimport PropTypes from 'prop-types'\nconst style = { marginTop: 10, marginBottom: 10 }\nconst StandardGridElement = ({ children, ...rest }) => (\n  <Col sm={12} md={6} {...rest} style={style}>\n    {children}\n  </Col>\n)\n\nStandardGridElement.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default StandardGridElement\n","import React from 'react'\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Container,\n  Row\n} from 'reactstrap'\nimport creditRisk from '../assets/images/creditRisk.jpg'\nimport liquidity from '../assets/images/liquidity.jpg'\nimport operationalRisk from '../assets/images/operationalRisk.jpg'\nimport creditRiskExtensions from '../assets/images/creditRiskExtensions.jpg'\nimport CreditRiskPaper from '../assets/pdf/CreditRiskPaper.pdf'\nimport OpsRiskPaper from '../assets/pdf/OpsRiskPaper.pdf'\nimport CreditRiskExtensions from '../assets/pdf/CreditRiskExtensions.pdf'\nimport LiquidityRisk from '../assets/pdf/LiquidityRisk.pdf'\nimport StandardGridElement from '../components/StandardGridElement'\n\nconst Research = () => (\n  <Container>\n    <Row>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={creditRisk} alt=\"credit risk\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Credit Risk</CardTitle>\n            <CardText>\n              This paper is published in the Journal of Credit Risk and pioneers\n              efficient computation of the distribution of credit loss for large\n              heterogenuous portfolios.\n              <br />\n              <a href={CreditRiskPaper}>Internal Link</a>\n              <br />\n              <a\n                href=\"http://www.risk.net/journal-of-credit-risk/technical-paper/2436463/loss-distributions-computational-efficiency-in-an-extended-framework\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                External Link\n              </a>\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={operationalRisk} alt=\"credit risk\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Operational Risk</CardTitle>\n            <CardText>\n              This paper is published in the Journal of Operational Risk and\n              significantly extends the standard LDA operational loss framework\n              to include correlation between severity and frequency and\n              auto-correlation in frequency. The distribution can be recovered\n              practically instantly even for very long tailed severity\n              distributions.\n              <br />\n              <a href={OpsRiskPaper} target=\"_blank\" rel=\"noopener noreferrer\">\n                Internal Link\n              </a>\n              <br />\n              <a\n                href=\"http://www.risk.net/journal-of-operational-risk/technical-paper/2454227/operational-loss-with-correlated-frequency-and-severity-an-analytical-approach\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                External Link\n              </a>\n              <br />\n              <a\n                href=\"http://www.risk.net/risk/news/2455815/correlation-of-op-risk-losses-could-send-capital-soaring\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Interview with Risk.net\n              </a>\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg\n            top\n            width=\"100%\"\n            src={creditRiskExtensions}\n            alt=\"credit risk\"\n          />\n          <CardBody>\n            <CardTitle className=\"lead\">\n              Credit Risk Extensions (unpublished)\n            </CardTitle>\n            <CardText>\n              This paper describes in greater detail how to allocate risk to\n              individual loans including marginal liquidity risk.\n              <br />\n              <a\n                href={CreditRiskExtensions}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Internal Link\n              </a>\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={liquidity} alt=\"credit risk\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Liquidity Risk (unpublished)</CardTitle>\n            <CardText>\n              This paper is a short description and proposal for managing\n              liquidity risk.\n              <br />\n              <a href={LiquidityRisk} target=\"_blank\" rel=\"noopener noreferrer\">\n                Internal Link\n              </a>\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n    </Row>\n  </Container>\n)\n\nexport default Research\n","import React from 'react'\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Container,\n  Row\n} from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport model from '../assets/images/model.jpg'\nimport liquidity from '../assets/images/liquidity.jpg'\nimport sql from '../assets/images/sql.jpg'\nimport crypto from '../assets/images/crypto.jpg'\nimport code from '../assets/images/code.jpg'\nimport passion from '../assets/images/passion.jpg'\nimport CreditRiskPaper from '../assets/pdf/CreditRiskPaper.pdf'\nimport OpsRiskPaper from '../assets/pdf/OpsRiskPaper.pdf'\nimport StandardGridElement from '../components/StandardGridElement'\nimport { RESEARCH, PROJECTS } from '../constants/routes'\n\nconst About = () => (\n  <Container>\n    <Row>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={model} alt=\"modeling\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Mathematical Modeling</CardTitle>\n            <CardText>\n              I have created credit and operational economic capital models as\n              can be seen in the <Link to={RESEARCH}>research</Link> section of\n              this site. I also have created ad-hoc projects (including a full\n              market risk model) some of which can be found in the{' '}\n              <Link to={PROJECTS}>projects</Link> section. At a previous job I\n              created the ALLL and economic capital models. The economic capital\n              model used{' '}\n              <a\n                href=\"http://arxiv.org/pdf/0708.2542.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Euler's{' '}\n              </a>{' '}\n              method to allocate economic capital to each loan in the portfolio.\n              Each of these models was written in Java and had a GUI which\n              allowed non-technical users to price loans and analyze risk.\n              Currently, I am building out a library of models in the\n              programming language Rust. I have{' '}\n              <a\n                href=\"https://github.com/realoptions/option_price_faas\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                option pricing models\n              </a>\n              ,{' '}\n              <a\n                href=\"https://github.com/phillyfan1138/hull_white_rust\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                market risk models\n              </a>\n              , and{' '}\n              <a\n                href=\"https://github.com/phillyfan1138/loan_ec\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                economic capital models\n              </a>\n              .\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={liquidity} alt=\"liquidity\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Liquidity Risk</CardTitle>\n            <CardText>\n              One of the biggest risks to a financial institution is a lack of\n              liquidity. A bank may be well capitalized, have good cash flow,\n              and even be profitable. But a sudden draw on liabilities caused\n              either by the withdrawal from a single large client or a systemic\n              withdrawal by many smaller clients can render a bank insolvent\n              regardless of these other factors. My published paper on credit\n              risk features a semi-endogenous liquidity event that increases in\n              probability as credit losses increases. A unpublished follow up to\n              that paper describes in more detail how the liquidity capital\n              should be applied to the loan level. An additional unpublished\n              paper presents a short description of the causes and recent\n              impacts of liquidity crisis as well as proposals for managing\n              liquidity risk. These papers can be found in the{' '}\n              <Link to={RESEARCH}>research</Link> section of this site.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={sql} alt=\"sql\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Data</CardTitle>\n            <CardText>\n              I have experience with big data solutions such as Hadoop and S3. I\n              have also experimented with streaming solutions such as Kafka and\n              Kinesis. Large scale problems which require highly parallel\n              algorithms running on multiple computers has appealed to me as a\n              way to conveniently scale models which must be run on large\n              datasets. Despite the prevalence of big data, traditional\n              relational databases still have their place. I've created numerous\n              normalized relational schema for dozens of tables that have been\n              used in production.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={crypto} alt=\"sql\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Fintech</CardTitle>\n            <CardText>\n              I have a strong interest in blockchain technology and\n              cryptocurrencies. Financial instutions will be forced by\n              competitive pressures to streamline and innovate. Blockchain\n              technology promises to a means by which this innovation will\n              occur. Transactions can be automated and are fully auditable.\n              Aside from huge cost savings, strong internal controls will be\n              inherent in the blockchain process. I have completed the MIT\n              FinTech course and was one of the four capstones (out of over 300)\n              who were picked by the course advisors. The code used in the\n              capstone is available on the{' '}\n              <a\n                href=\"https://github.com/skyPet\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SkyPet\n              </a>{' '}\n              repository.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={code} alt=\"code\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Programming</CardTitle>\n            <CardText>\n              I have created applications in Java, C++, Python, Rust, and\n              HTML/Javascript including NodeJS. Some of these applications are\n              available on <Link to={RESEARCH}>this site</Link> while others are\n              available on my{' '}\n              <a\n                href=\"https://github.com/phillyfan1138/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {' '}\n                github\n              </a>{' '}\n              page. These applications range from an{' '}\n              <a\n                href=\"https://github.com/phillyfan1138/binomial_tree_rust\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                automatic recombining tree class for any single dimensional\n                stochastic differential equation\n              </a>{' '}\n              to creating a{' '}\n              <a\n                href=\"https://github.com/phillyfan1138/onkyo-yatse-plugin\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                plugin\n              </a>{' '}\n              for{' '}\n              <a\n                href=\"https://yatse.tv/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Yatse\n              </a>{' '}\n              which is available at the{' '}\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.danielhstahl.plugin.avreceiver.onkyo\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Google app store\n              </a>{' '}\n              . Additionally I have a working knowledge of SAS, VBA, and VB.net.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={passion} alt=\"passion\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Passions</CardTitle>\n            <CardText>\n              I have a goal of creating a parsimonious economic capital model\n              that is both actionable and accurate. Actionable models have\n              intuitive results for various economic and bank specific scenarios\n              with output that can be used to improve risk-based performance\n              while providing timely results. Accurate models use assumptions\n              that are close approximations of the actual data generating\n              process. In the economic capital space, accurate models typically\n              require CPU intensive Monte Carlo simulations. Many Monte Carlo\n              implementations fail to meet the goal of providing timely results.\n              One method to circumvent Monte Carlo computation uses\n              characteristic functions to efficiently blend market, operational,\n              credit risk, and liquidity risk while retaining accuracy. I have\n              written two papers which demonstrate this technique for{' '}\n              <a\n                href={CreditRiskPaper}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                credit risk\n              </a>{' '}\n              and{' '}\n              <a href={OpsRiskPaper} target=\"_blank\" rel=\"noopener noreferrer\">\n                operational risk\n              </a>\n              .\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n    </Row>\n  </Container>\n)\nexport default About\n","export const HOME = '/home'\nexport const RESEARCH = '/research'\nexport const ABOUT = '/about'\nexport const PROJECTS = '/projects'\nexport const PERSPECTIVES = '/perspectives'\n","import React from 'react'\nimport { Card, CardText, CardBody, CardTitle, Container, Row } from 'reactstrap'\nimport StandardGridElement from '../components/StandardGridElement'\n\nconst Thoughts = () => (\n  <Container>\n    <Row>\n      <StandardGridElement>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"lead\">\n              Thoughts on model development\n            </CardTitle>\n            <CardText>\n              Models require robust DevOps automation and declarability even\n              more than traditional software. Models have a number of additional\n              inherent complexities which makes the discipline, automation, and\n              transparency of DevOps practices practically a requirement. These\n              additional complexities include long running and computationally\n              intense training, data dependence at both at train and scoring,\n              and deterioration of performance over time.\n              <br />\n              In order to address these complexities, it is important to have a\n              mental model for model development. Fortunately, many aspects of\n              the software development lifecycle apply to model development as\n              well. For example, model training is akin to software compilation\n              for software engineers. Software goes through a cycle where it is\n              versioned in a source control system (typically Git), tested using\n              a continuous integration (CI) tool, and then compiled or built\n              into a binary or package. A common example in the Java world is to\n              build and release a jar file. In model development, software is\n              written to train a model, tested using CI tools (both code testing\n              and potentially statistical tests), and an artifact is deployed\n              (the \"trained\" model). This trained model, much like a jar file in\n              Java, should be versioned so that consuming applications can\n              choose the appropriate model from the model's history.\n              <br />\n              Unfortunately, while compilation in the software world is\n              typically quick (seconds or minutes), model training can take\n              hours to days. Hence new tooling and thought processes must be\n              used for model training. But here again, concepts from extreme\n              programming can be used. For example, much of the model\n              development time is spent on data manipulations and model\n              experimentation. Before starting model development,\n              transformations and statistical tests/requirements can be created\n              which the model must pass in order to be appropriate for\n              deployment. By using Test Driven Development, much of the logic\n              can be tested prior to training and model selection can be\n              performed and automated as part of the training process.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"lead\">How to develop a model</CardTitle>\n            <CardText>\n              Consider the process to be modeled. What constraints are there?\n              How precise does the model have to be? What is the process which\n              could approximate the process that actually generates the data? As\n              an example, consider a model used to satisfy the{' '}\n              <a\n                href=\"http://www.occ.treas.gov/news-issuances/bulletins/2012/bulletin-2012-25a-Market-Risk.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Market Risk Rule\n              </a>{' '}\n              needs to include an interest rate process with \"n\" dimensions or\n              whether a naive single-dimensional process like Vasicek or\n              Cox-Ingersoll-Ross is sufficient as a first approximation.\n              Doubtless using a more complicated process will yield superior\n              results but at the cost of complexity and computational power.\n              <br />\n              Consider what type of solution should be used. Is there an\n              analytical solution? If not what type of numeric scheme should be\n              used? Its often tempting to solve models using Monte Carlo\n              techniques due to the ease of development but for many situations\n              are unnecessary. Monte Carlo, finite difference methods, and even\n              Fourier techniques are{' '}\n              <a\n                href=\"https://en.wikipedia.org/wiki/Embarrassingly_parallel\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                embarrassingly parallel\n              </a>{' '}\n              and can be run on multiple cores or on GPUs.\n              <br />\n              Consider calibration and calibration techniques. If possible try\n              to mark the model to market instead of to historical data: the\n              market is \"correct\" and calibration tends to be easier. This only\n              applies to \"risk-neutral\" parameters and for applications like ALM\n              or CCAR this may not be appropriate.\n              <br />\n              Code the model in the appropriate language. Pay attention to how\n              data flows into the model.\n              <br />\n              Test the model. This may involve backtesting in the case of a\n              time-series, trading, or hedging model. This may also involve\n              Monte Carlo simulations to test the computational accuracy of the\n              model: while Monte Carlo techniques are very slow they are very\n              easy to develop and run. Obviously the extent and type of testing\n              is very dependent on the model.\n              <br />\n              Make the model consumable. Without an easy to use GUI no one will\n              want to use the model. The world's best model is useless if no one\n              wants to use it.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"lead\">Model Risk</CardTitle>\n            <CardText>\n              Emanuel Derman (of{' '}\n              <a\n                href=\"http://www.emanuelderman.com/media/faj-one_factor_model.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Black-Derman-Toy\n              </a>{' '}\n              fame) anticipated the current scrutiny on model risk by a few\n              decades.{' '}\n              <a\n                href=\"http://www.emanuelderman.com/media/gs-model_risk.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                His now classic paper on model risk\n              </a>{' '}\n              was published over ten years before the \"great recession\" and in\n              many ways offers a more concise and sophisticated approach to\n              model risk than that provided by{' '}\n              <a\n                href=\"http://www.federalreserve.gov/bankinforeg/srletters/sr1107a1.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SR 11-7\n              </a>\n              . Model risk is logically exposited and easily understood.\n              However, his most practical contribution may be his model\n              taxonomy.\n              <br />\n              Model taxonomy is often difficult to get right as stakeholders\n              have varying incentives for how to define models. Derman's\n              taxonomy splits models at a very abstract level and yet still\n              retains transparent classifications. Executives who may be\n              unfamiliar with the details of model development can still readily\n              understand the taxonomy and opine on the relevance to a particular\n              model. Derman differentiates between fundamental models,\n              phenomenological models, and statistical models.\n              <br />\n              Fundamental models posit a view of the word and then try to find\n              solutions given such a view. Derman's example of such a model is\n              the Black-Scholes model. I disagree with him slightly here: the\n              risk-neutral pricing paradigm that arose from the Black-Scholes is\n              more fundamental and practical. In many situations fundamental\n              models don't even require \"estimates\" or \"predictions\" in the\n              traditional sense: they provide KPIs through which decisions can\n              be made. For example, in the Black Scholes model implied\n              volatility can be used as a risk metric. Similarly the implied\n              \"delta\" can be used to hedge market exposure.\n              <br />\n              Phenomenological models are good analogies or descriptions that\n              may lack the detail or precision to be considered a fundamental\n              model. These models, in the modern model risk parlance, may be\n              good \"challenger\" models.\n              <br />\n              Statistical models are simply observations given data, but do not\n              posit a complex relationship among data. Examples of statistical\n              models include machine learning models. These models may be\n              computationally complex but are typically describing simple\n              results. In many ways these statistical models are unsuitable for\n              \"production\" as there is little a-priori theory to explain the\n              relationships and the relationship may alter dramatically with new\n              data.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n    </Row>\n  </Container>\n)\nexport default Thoughts\n","import React from 'react'\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Container,\n  Row\n} from 'reactstrap'\nimport StandardGridElement from '../components/StandardGridElement'\nimport singapore from '../assets/images/SingaporeSkyline-small.jpg'\nimport background from '../assets/images/backgroundsmall.jpg'\n\nconst Home = () => (\n  <Container>\n    <Row>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={singapore} alt=\"vision\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Vision</CardTitle>\n            <CardText>\n              To be at the cutting edge of financial and technological progress\n              by promoting and inventing innovations in application development,\n              design architecture, and mathematical modeling.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n      <StandardGridElement>\n        <Card>\n          <CardImg top width=\"100%\" src={background} alt=\"summary\" />\n          <CardBody>\n            <CardTitle className=\"lead\">Summary</CardTitle>\n            <CardText>\n              I work for{' '}\n              <a\n                href=\"http://regions.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Regions\n              </a>{' '}\n              as the head of data and analytics platforms in the Data and\n              Analytics office. I have a masters degree in mathematical finance\n              from the University of North Carolina Charlotte. Previously I have\n              worked as a Model Risk Manager at Regions, at{' '}\n              <a\n                href=\"http://glsllc.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                GLS\n              </a>{' '}\n              in portfolio analytics, as an internal auditor in quantitative\n              analytics at BB&T, and as a model developer and risk analyst at\n              Uwharrie Capital Corp. I currently reside in Birmingham, AL.\n            </CardText>\n          </CardBody>\n        </Card>\n      </StandardGridElement>\n    </Row>\n  </Container>\n)\nexport default Home\n","export const getData = (body, url) =>\n  fetch(url, { method: 'POST', body: JSON.stringify(body) }).then(res =>\n    res.json()\n  )\n","import React from 'react'\nimport { Button, Progress } from 'reactstrap'\nimport PropTypes from 'prop-types'\nconst LoadingButton = ({ children, isLoading, color, ...rest }) =>\n  isLoading ? (\n    <Progress animated value=\"100\" color={color} />\n  ) : (\n    <Button {...rest} color={color}>\n      {children}\n    </Button>\n  )\n\nLoadingButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  color: PropTypes.string\n}\nexport default LoadingButton\n","export const onChangeHOF = (fields, setFields) => key => value =>\n  setFields({ ...fields, [key]: value.target.value })\n\nexport const getValueAndOnChangeHOF = (fields, onChange) => key => ({\n  value: fields[key],\n  onChange: onChange(key)\n})\n\nexport const formOffset = { size: 8, offset: 4 }\n","//This file is autogenerated!!  Do not directly edit!\nimport React, { useState } from 'react'\nimport { Label, Input, Form, FormGroup, Col } from 'reactstrap'\nimport { getData } from '../../utils/service'\nimport LoadingButton from '../LoadingButton'\nimport {\n  onChangeHOF,\n  getValueAndOnChangeHOF,\n  formOffset\n} from '../../utils/form'\nconst { size, offset } = formOffset\n\nconst defaultFieldsDensity = {\n  lambda: 0.5,\n  q: 0.05,\n  numU: 128,\n  pd: 0.02,\n  numLoans: 100000,\n  volatility: 0.5\n}\nconst Density = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsDensity)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://5qsvissse9.execute-api.us-east-1.amazonaws.com/prd/v1/credit/density'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"lambda\" md={offset}>\n          Lambda\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"lambda\"\n            id=\"lambda\"\n            {...getValueAndOnChange('lambda')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"q\" md={offset}>\n          q\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"q\"\n            id=\"q\"\n            {...getValueAndOnChange('q')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"numU\" md={offset}>\n          Steps in U\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"numU\"\n            id=\"numU\"\n            {...getValueAndOnChange('numU')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"pd\" md={offset}>\n          Probability of default\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"pd\"\n            id=\"pd\"\n            {...getValueAndOnChange('pd')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"numLoans\" md={offset}>\n          Number of loans\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"numLoans\"\n            id=\"numLoans\"\n            {...getValueAndOnChange('numLoans')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"volatility\" md={offset}>\n          Volatility\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"volatility\"\n            id=\"volatility\"\n            {...getValueAndOnChange('volatility')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst objSelect = { '/v1/credit/density': Density }\nconst endpoints = ['/v1/credit/density']\nexport default ({ onSubmit, isLoading, isVisible }) => {\n  const [selectedEndpoint, setEndpoint] = useState(endpoints[0])\n  return !isVisible ? null : (\n    <>\n      <FormGroup row>\n        <Label for=\"selectEndpoint\" md={offset}>\n          Select Endpoint\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"select\"\n            name=\"selectEndpoint\"\n            id=\"selectEndpoint\"\n            value={selectedEndpoint}\n            onChange={e => setEndpoint(e.target.value)}\n          >\n            <option value=\"/v1/credit/density\">Density</option>\n          </Input>\n        </Col>\n      </FormGroup>\n      {React.createElement(objSelect[selectedEndpoint], {\n        onSubmit,\n        isLoading\n      })}\n    </>\n  )\n}\n","//This file is autogenerated!!  Do not directly edit!\nimport React, { useState } from 'react'\nimport { Label, Input, Form, FormGroup, Col } from 'reactstrap'\nimport { getData } from '../../utils/service'\nimport LoadingButton from '../LoadingButton'\nimport {\n  onChangeHOF,\n  getValueAndOnChangeHOF,\n  formOffset\n} from '../../utils/form'\nconst { size, offset } = formOffset\n\nconst defaultFieldsDensity = {\n  t: 1,\n  numU: 128,\n  numOde: 128,\n  a: 0.3,\n  sigma: 0.3,\n  lambda: 100,\n  correlation: 0.8,\n  alpha: 1.1,\n  mu: 1300,\n  c: 100\n}\nconst Density = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsDensity)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://e43exqgwxl.execute-api.us-east-1.amazonaws.com/prd/v1/ops/density'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Time Horizon\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"numU\" md={offset}>\n          Steps in U\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"numU\"\n            id=\"numU\"\n            {...getValueAndOnChange('numU')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"numOde\" md={offset}>\n          Steps in ODE\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"numOde\"\n            id=\"numOde\"\n            {...getValueAndOnChange('numOde')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Speed\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"lambda\" md={offset}>\n          Jump Frequency\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"lambda\"\n            id=\"lambda\"\n            {...getValueAndOnChange('lambda')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"correlation\" md={offset}>\n          Correlation\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"correlation\"\n            id=\"correlation\"\n            {...getValueAndOnChange('correlation')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"alpha\" md={offset}>\n          Alpha\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"alpha\"\n            id=\"alpha\"\n            {...getValueAndOnChange('alpha')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"mu\" md={offset}>\n          Shift (Stable)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"mu\"\n            id=\"mu\"\n            {...getValueAndOnChange('mu')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"c\" md={offset}>\n          Scale (Stable)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"c\"\n            id=\"c\"\n            {...getValueAndOnChange('c')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst objSelect = { '/v1/ops/density': Density }\nconst endpoints = ['/v1/ops/density']\nexport default ({ onSubmit, isLoading, isVisible }) => {\n  const [selectedEndpoint, setEndpoint] = useState(endpoints[0])\n  return !isVisible ? null : (\n    <>\n      <FormGroup row>\n        <Label for=\"selectEndpoint\" md={offset}>\n          Select Endpoint\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"select\"\n            name=\"selectEndpoint\"\n            id=\"selectEndpoint\"\n            value={selectedEndpoint}\n            onChange={e => setEndpoint(e.target.value)}\n          >\n            <option value=\"/v1/ops/density\">Density</option>\n          </Input>\n        </Col>\n      </FormGroup>\n      {React.createElement(objSelect[selectedEndpoint], {\n        onSubmit,\n        isLoading\n      })}\n    </>\n  )\n}\n","//This file is autogenerated!!  Do not directly edit!\nimport React, { useState } from 'react'\nimport { Label, Input, Form, FormGroup, Col } from 'reactstrap'\nimport { getData } from '../../utils/service'\nimport LoadingButton from '../LoadingButton'\nimport {\n  onChangeHOF,\n  getValueAndOnChangeHOF,\n  formOffset\n} from '../../utils/form'\nconst { size, offset } = formOffset\n\nconst defaultFieldsBond = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1\n}\nconst Bond = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsBond)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/bond'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Bond maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsEdf = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  tenor: 0.25\n}\nconst Edf = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsEdf)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/edf'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          EDF maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"tenor\" md={offset}>\n          Floating tenor\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"tenor\"\n            id=\"tenor\"\n            {...getValueAndOnChange('tenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsBondcall = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  underlyingMaturity: 1.25,\n  strike: 0.97\n}\nconst Bondcall = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsBondcall)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/bondcall'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Option maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"underlyingMaturity\" md={offset}>\n          Maturity of underlying bond (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"underlyingMaturity\"\n            id=\"underlyingMaturity\"\n            {...getValueAndOnChange('underlyingMaturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"strike\" md={offset}>\n          Strike\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"strike\"\n            id=\"strike\"\n            {...getValueAndOnChange('strike')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsBondput = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  underlyingMaturity: 1.25,\n  strike: 0.97\n}\nconst Bondput = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsBondput)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/bondput'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Option maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"underlyingMaturity\" md={offset}>\n          Maturity of underlying bond (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"underlyingMaturity\"\n            id=\"underlyingMaturity\"\n            {...getValueAndOnChange('underlyingMaturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"strike\" md={offset}>\n          Strike\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"strike\"\n            id=\"strike\"\n            {...getValueAndOnChange('strike')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsCaplet = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  tenor: 0.25,\n  strike: 0.02\n}\nconst Caplet = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsCaplet)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/caplet'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Option maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"tenor\" md={offset}>\n          Floating tenor\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"tenor\"\n            id=\"tenor\"\n            {...getValueAndOnChange('tenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"strike\" md={offset}>\n          Strike\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"strike\"\n            id=\"strike\"\n            {...getValueAndOnChange('strike')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsSwap = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  tenor: 0.25,\n  swapRate: 0.02\n}\nconst Swap = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsSwap)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/swap'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Swap maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"tenor\" md={offset}>\n          Floating tenor\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"tenor\"\n            id=\"tenor\"\n            {...getValueAndOnChange('tenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"swapRate\" md={offset}>\n          Swap rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"swapRate\"\n            id=\"swapRate\"\n            {...getValueAndOnChange('swapRate')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsSwaption = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  tenor: 0.25,\n  swapTenor: 5,\n  swapRate: 0.02\n}\nconst Swaption = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsSwaption)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/swaption'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Swap maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"tenor\" md={offset}>\n          Floating tenor\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"tenor\"\n            id=\"tenor\"\n            {...getValueAndOnChange('tenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"swapTenor\" md={offset}>\n          Swap tenor (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"swapTenor\"\n            id=\"swapTenor\"\n            {...getValueAndOnChange('swapTenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"swapRate\" md={offset}>\n          Swap rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"swapRate\"\n            id=\"swapRate\"\n            {...getValueAndOnChange('swapRate')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst defaultFieldsAmericanswaption = {\n  t: 10,\n  r0: 0.04,\n  a: 0.3,\n  b: 0.05,\n  sigma: 0.05,\n  maturity: 1,\n  tenor: 0.25,\n  swapTenor: 5,\n  swapRate: 0.02\n}\nconst Americanswaption = ({ onSubmit, isLoading }) => {\n  const [fields, setFields] = useState(defaultFieldsAmericanswaption)\n  const onChange = onChangeHOF(fields, setFields)\n  const getValueAndOnChange = getValueAndOnChangeHOF(fields, onChange)\n  return (\n    <Form\n      onSubmit={onSubmit(fields, numFields =>\n        getData(\n          numFields,\n          'https://4mf1valfp4.execute-api.us-east-1.amazonaws.com/prd/v1/market/histogram/americanswaption'\n        )\n      )}\n    >\n      <FormGroup row>\n        <Label for=\"t\" md={offset}>\n          Simulate to (days)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"1\"\n            name=\"t\"\n            id=\"t\"\n            {...getValueAndOnChange('t')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"r0\" md={offset}>\n          Current short rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"r0\"\n            id=\"r0\"\n            {...getValueAndOnChange('r0')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"a\" md={offset}>\n          Mean reversion\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"a\"\n            id=\"a\"\n            {...getValueAndOnChange('a')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"b\" md={offset}>\n          Long run average rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"b\"\n            id=\"b\"\n            {...getValueAndOnChange('b')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"sigma\" md={offset}>\n          Volatility of rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"sigma\"\n            id=\"sigma\"\n            {...getValueAndOnChange('sigma')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"maturity\" md={offset}>\n          Swap maturity (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"maturity\"\n            id=\"maturity\"\n            {...getValueAndOnChange('maturity')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"tenor\" md={offset}>\n          Floating tenor\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"tenor\"\n            id=\"tenor\"\n            {...getValueAndOnChange('tenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"swapTenor\" md={offset}>\n          Swap tenor (years)\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"swapTenor\"\n            id=\"swapTenor\"\n            {...getValueAndOnChange('swapTenor')}\n          />\n        </Col>\n      </FormGroup>\n\n      <FormGroup row>\n        <Label for=\"swapRate\" md={offset}>\n          Swap rate\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"number\"\n            step=\"any\"\n            name=\"swapRate\"\n            id=\"swapRate\"\n            {...getValueAndOnChange('swapRate')}\n          />\n        </Col>\n      </FormGroup>\n\n      <LoadingButton isLoading={isLoading}>Submit</LoadingButton>\n    </Form>\n  )\n}\nconst objSelect = {\n  '/v1/market/histogram/bond': Bond,\n  '/v1/market/histogram/edf': Edf,\n  '/v1/market/histogram/bondcall': Bondcall,\n  '/v1/market/histogram/bondput': Bondput,\n  '/v1/market/histogram/caplet': Caplet,\n  '/v1/market/histogram/swap': Swap,\n  '/v1/market/histogram/swaption': Swaption,\n  '/v1/market/histogram/americanswaption': Americanswaption\n}\nconst endpoints = [\n  '/v1/market/histogram/bond',\n  '/v1/market/histogram/edf',\n  '/v1/market/histogram/bondcall',\n  '/v1/market/histogram/bondput',\n  '/v1/market/histogram/caplet',\n  '/v1/market/histogram/swap',\n  '/v1/market/histogram/swaption',\n  '/v1/market/histogram/americanswaption'\n]\nexport default ({ onSubmit, isLoading, isVisible }) => {\n  const [selectedEndpoint, setEndpoint] = useState(endpoints[0])\n  return !isVisible ? null : (\n    <>\n      <FormGroup row>\n        <Label for=\"selectEndpoint\" md={offset}>\n          Select Endpoint\n        </Label>\n        <Col md={size}>\n          <Input\n            type=\"select\"\n            name=\"selectEndpoint\"\n            id=\"selectEndpoint\"\n            value={selectedEndpoint}\n            onChange={e => setEndpoint(e.target.value)}\n          >\n            <option value=\"/v1/market/histogram/bond\">Bond</option>\n            <option value=\"/v1/market/histogram/edf\">Edf</option>\n            <option value=\"/v1/market/histogram/bondcall\">Bondcall</option>\n            <option value=\"/v1/market/histogram/bondput\">Bondput</option>\n            <option value=\"/v1/market/histogram/caplet\">Caplet</option>\n            <option value=\"/v1/market/histogram/swap\">Swap</option>\n            <option value=\"/v1/market/histogram/swaption\">Swaption</option>\n            <option value=\"/v1/market/histogram/americanswaption\">\n              Americanswaption\n            </option>\n          </Input>\n        </Col>\n      </FormGroup>\n      {React.createElement(objSelect[selectedEndpoint], {\n        onSubmit,\n        isLoading\n      })}\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport PropTypes from 'prop-types'\n\nconst Flip = ({ open, children, onClose }) =>\n  open ? (\n    <div>\n      <Button close onClick={onClose} />\n      {children()}\n    </div>\n  ) : null\n\nFlip.propTypes = {\n  open: PropTypes.bool.isRequired,\n  children: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired\n}\nexport default Flip\n","import React, { useState } from 'react'\nimport Flip from './Flip'\nimport PropTypes from 'prop-types'\n\n//exported for testing\nexport const onSubmitHOF = (setChart, setShowChart, setIsLoading) => (\n  fields,\n  fetchData\n) => e => {\n  e.preventDefault()\n  setIsLoading(true)\n  const numericFields = Object.entries(fields).reduce(\n    (prev, curr) => ({\n      ...prev,\n      [curr[0]]: parseFloat(curr[1])\n    }),\n    {}\n  )\n  return fetchData(numericFields)\n    .then(setChart)\n    .then(() => setShowChart(true))\n    .catch(err => console.log(err))\n    .then(() => setIsLoading(false))\n}\n\nconst LambdaForm = ({ children, chartComponent, ...rest }) => {\n  const [chart, setChart] = useState({})\n  const [showChart, setShowChart] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const onSubmit = onSubmitHOF(setChart, setShowChart, setIsLoading)\n  const chartCInst = () => chartComponent({ data: chart, ...rest })\n  return (\n    <>\n      <Flip open={showChart} onClose={() => setShowChart(false)}>\n        {chartCInst}\n      </Flip>\n      {children({ onSubmit, isLoading, isVisible: !showChart })}\n    </>\n  )\n}\nLambdaForm.propTypes = {\n  children: PropTypes.func.isRequired,\n  chartComponent: PropTypes.func.isRequired\n}\nexport default LambdaForm\n","export const CONTAINER_STYLE = { touchAction: 'auto' }\nexport const DEFAULT_ANIMATE_STYLE = {\n  duration: 0.0,\n  onLoad: { duration: 500 }\n}\n\nexport const X_AXIS_STYLE = {\n  tickLabels: {\n    angle: 90,\n    padding: 10,\n    verticalAnchor: 'middle',\n    textAnchor: 'start'\n  }\n}\n","import React from 'react'\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryAxis,\n  VictoryContainer\n} from 'victory'\nimport {\n  CONTAINER_STYLE,\n  DEFAULT_ANIMATE_STYLE,\n  X_AXIS_STYLE\n} from '../constants/charts'\nimport PropTypes from 'prop-types'\nconst chartPadding = { bottom: 70 }\nconst DensityChart = ({\n  data,\n  color,\n  animateStyle = DEFAULT_ANIMATE_STYLE\n}) => (\n  <VictoryChart\n    animate={animateStyle}\n    padding={chartPadding}\n    containerComponent={<VictoryContainer style={CONTAINER_STYLE} />}\n  >\n    <VictoryAxis style={X_AXIS_STYLE} />\n    <VictoryLine\n      style={{ data: { stroke: color } }}\n      data={data}\n      interpolation=\"natural\"\n      x=\"at_point\"\n      y=\"density\"\n    />\n  </VictoryChart>\n)\nDensityChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      density: PropTypes.number.isRequired,\n      at_point: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  color: PropTypes.string\n}\nexport default DensityChart\n","import React from 'react'\nimport {\n  VictoryChart,\n  VictoryBar,\n  VictoryAxis,\n  VictoryContainer\n} from 'victory'\nimport {\n  CONTAINER_STYLE,\n  DEFAULT_ANIMATE_STYLE,\n  X_AXIS_STYLE\n} from '../constants/charts'\nimport PropTypes from 'prop-types'\nconst transformData = data =>\n  Object.entries(data).map(([bin, frequency]) => ({\n    bin,\n    frequency\n  }))\nconst tickFormat = t => t.split('-')[0]\nconst chartPadding = { bottom: 60, left: 20, right: 20 }\nconst HistogramChart = ({\n  data,\n  color,\n  animateStyle = DEFAULT_ANIMATE_STYLE\n}) => (\n  <VictoryChart\n    padding={chartPadding}\n    animate={animateStyle}\n    containerComponent={<VictoryContainer style={CONTAINER_STYLE} />}\n  >\n    <VictoryAxis style={X_AXIS_STYLE} tickFormat={tickFormat} />\n    <VictoryBar\n      barRatio={1.5}\n      style={{ data: { fill: color } }}\n      data={transformData(data)}\n      x=\"bin\"\n      y=\"frequency\"\n    />\n  </VictoryChart>\n)\nHistogramChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  color: PropTypes.string\n}\nexport default HistogramChart\n","import React from 'react'\nimport { Card, CardBody, CardTitle, Container, Row } from 'reactstrap'\nimport CreditProject from '../components/generatedComponents/Credit_Risk_Demo'\nimport OpsProject from '../components/generatedComponents/Ops_Risk_Demo'\nimport MarketProject from '../components/generatedComponents/Market_Risk_Demo'\nimport LambdaForm from '../components/LambdaForm'\nimport StandardGridElement from '../components/StandardGridElement'\nimport DensityChart from '../components/DensityChart'\nimport HistogramChart from '../components/HistogramChart'\nimport CreditRiskPaper from '../assets/pdf/CreditRiskPaper.pdf'\nimport OpsRiskPaper from '../assets/pdf/OpsRiskPaper.pdf'\nimport MarketRiskPaper from '../assets/pdf/MarketRiskDocumentation.pdf'\n\nconst Projects = () => {\n  const style = getComputedStyle(document.body)\n  const theme = {\n    primary: style.getPropertyValue('--primary'),\n    secondary: style.getPropertyValue('--secondary')\n  }\n  return (\n    <Container>\n      <Row>\n        <StandardGridElement>\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <span className=\"lead\">Credit Risk</span>\n                <a className=\"float-right\" href={CreditRiskPaper}>\n                  Documentation\n                </a>\n              </CardTitle>\n              <LambdaForm chartComponent={DensityChart} color={theme.primary}>\n                {({ onSubmit, isLoading, isVisible }) => (\n                  <CreditProject\n                    onSubmit={onSubmit}\n                    isLoading={isLoading}\n                    isVisible={isVisible}\n                  />\n                )}\n              </LambdaForm>\n            </CardBody>\n          </Card>\n        </StandardGridElement>\n        <StandardGridElement>\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <span className=\"lead\">Operational Risk</span>\n                <a className=\"float-right\" href={OpsRiskPaper}>\n                  Documentation\n                </a>\n              </CardTitle>\n              <LambdaForm chartComponent={DensityChart} color={theme.primary}>\n                {({ onSubmit, isLoading, isVisible }) => (\n                  <OpsProject\n                    onSubmit={onSubmit}\n                    isLoading={isLoading}\n                    isVisible={isVisible}\n                  />\n                )}\n              </LambdaForm>\n            </CardBody>\n          </Card>\n        </StandardGridElement>\n        <StandardGridElement>\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <span className=\"lead\">Market Risk</span>\n                <a className=\"float-right\" href={MarketRiskPaper}>\n                  Documentation\n                </a>\n              </CardTitle>\n              <LambdaForm chartComponent={HistogramChart} color={theme.primary}>\n                {({ onSubmit, isLoading, isVisible }) => (\n                  <MarketProject\n                    onSubmit={onSubmit}\n                    isLoading={isLoading}\n                    isVisible={isVisible}\n                  />\n                )}\n              </LambdaForm>\n            </CardBody>\n          </Card>\n        </StandardGridElement>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Projects\n","import {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\nimport React, { useState } from 'react'\nimport { NavLink as RRNavLink, Link } from 'react-router-dom'\nimport avatar from '../assets/images/avatar.png'\nimport {\n  HOME,\n  RESEARCH,\n  PROJECTS,\n  ABOUT,\n  PERSPECTIVES\n} from '../constants/routes'\nconst linkedIn =\n  'https://www.linkedin.com/profile/view?id=AAIAAAYja3AB_fq6IhUtF5CBw1yjTHheP8YIooE&trk=nav_responsive_tab_profile'\nconst github = 'https://github.com/phillyfan1138'\nconst imgStyle = { paddingRight: 5, borderRadius: '50%' }\nconst DanielNav = () => {\n  const [isOpen, toggleOpen] = useState(false)\n  return (\n    <Navbar color=\"light\" light expand=\"md\">\n      <NavbarBrand tag={Link} to={HOME}>\n        <img src={avatar} height={50} style={imgStyle} alt=\"\" />\n        Daniel Stahl\n      </NavbarBrand>\n      <NavbarToggler onClick={() => toggleOpen(!isOpen)} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={RRNavLink} to={HOME} activeClassName=\"active\">\n              Home\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={RRNavLink} to={RESEARCH} activeClassName=\"active\">\n              Research\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={RRNavLink} to={PROJECTS} activeClassName=\"active\">\n              Projects\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={RRNavLink} to={PERSPECTIVES} activeClassName=\"active\">\n              Perspectives\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={RRNavLink} to={ABOUT} activeClassName=\"active\">\n              About\n            </NavLink>\n          </NavItem>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              Connect\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem tag=\"a\" href={linkedIn}>\n                LinkedIn\n              </DropdownItem>\n              <DropdownItem tag=\"a\" href={github}>\n                GitHub\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  )\n}\nexport default DanielNav\n","import { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport React from 'react'\nimport Research from './pages/Research'\nimport About from './pages/About'\nimport Perspectives from './pages/Perspectives'\nimport Home from './pages/Home'\nimport Projects from './pages/Projects'\nimport DanielNav from './components/DanielNav'\nimport ReactGA from 'react-ga'\nimport {\n  HOME,\n  RESEARCH,\n  PROJECTS,\n  ABOUT,\n  PERSPECTIVES\n} from './constants/routes'\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-73388166-2')\n}\nconst LogPageView = () => {\n  if (process.env.NODE_ENV === 'production') {\n    ReactGA.set({ page: window.location.pathname })\n    ReactGA.pageview(window.location.pathname)\n  }\n  return null\n}\nexport default () => (\n  <Router>\n    <>\n      <DanielNav />\n      <Route path=\"/\" component={LogPageView} />\n      <Switch>\n        <Route path={RESEARCH} component={Research} />\n        <Route path={PROJECTS} component={Projects} />\n        <Route path={PERSPECTIVES} component={Perspectives} />\n        <Route path={ABOUT} component={About} />\n        <Route path={HOME} component={Home} />\n        <Redirect from=\"/\" to={HOME} />\n      </Switch>\n    </>\n  </Router>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/CreditRiskPaper.73438ae3.pdf\";","module.exports = __webpack_public_path__ + \"static/media/OpsRiskPaper.9e0cbee4.pdf\";","module.exports = __webpack_public_path__ + \"static/media/liquidity.dec0082c.jpg\";"],"sourceRoot":""}